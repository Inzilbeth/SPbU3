// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task1.Models;

namespace Task1.Migrations
{
    [DbContext(typeof(Repository))]
    partial class RepositoryModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Task1.Models.AssemblyFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Content")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TestRunId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TestRunId");

                    b.ToTable("AssemblyFile");
                });

            modelBuilder.Entity("Task1.Models.TestInfoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActualException")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpectedException")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsIgnored")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("bit");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonToIgnore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TestRunId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TestRunId");

                    b.ToTable("TestInfoModel");
                });

            modelBuilder.Entity("Task1.Models.TestRun", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Runs");
                });

            modelBuilder.Entity("Task1.Models.AssemblyFile", b =>
                {
                    b.HasOne("Task1.Models.TestRun", null)
                        .WithMany("Source")
                        .HasForeignKey("TestRunId");
                });

            modelBuilder.Entity("Task1.Models.TestInfoModel", b =>
                {
                    b.HasOne("Task1.Models.TestRun", null)
                        .WithMany("Report")
                        .HasForeignKey("TestRunId");
                });

            modelBuilder.Entity("Task1.Models.TestRun", b =>
                {
                    b.Navigation("Report");

                    b.Navigation("Source");
                });
#pragma warning restore 612, 618
        }
    }
}
